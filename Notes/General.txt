----General----

Note that when using from package import item, the item can be either a submodule (or subpackage) of the package, or some other name defined in the package, like a function, class or variable. The import statement first tests whether the item is defined in the package; if not, it assumes it is a module and attempts to load it. If it fails to find it, an ImportError exception is raised.

Contrarily, when using syntax like import item.subitem.subsubitem, each item except for the last must be a package; the last item can be a module or a package but can’t be a class or function or variable defined in the previous item.

All commands below do that same
$ django-admin <command> [options]
$ manage.py <command> [options]
$ python -m django <command> [options]

“Mastering Regular Expressions” by Jeffrey Friedl


The command-line examples use django-admin to be consistent, but any example can use manage.py or python -m django just as well.
New in Django 1.9: python -m django was added.


Python’s datetime.datetime objects have a tzinfo attribute that can be used to store time zone information, represented as an instance of a subclass of datetime.tzinfo. When this attribute is set and describes an offset, a datetime object is aware. Otherwise, it’s naive.
You can use is_aware() and is_naive() to determine whether datetimes are aware or naive.


If you previously installed Django using python setup.py install, uninstalling is as simple as deleting the django directory from your Python site-packages. To find the directory you need to remove, you can run the following at your shell prompt (not the interactive Python prompt):
$ python -c "import django; print(django.__path__)"